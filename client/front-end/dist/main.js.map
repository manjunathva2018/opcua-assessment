{"version":3,"sources":["./src/app/graphical/table/table.component.ts","./src/app/graphical/table/table.component.html","ws (ignored)","./src/app/create-widget/create-widget.component.ts","./src/app/create-widget/create-widget.component.html","./src/app/graphical/pie/pie.component.ts","./src/app/graphical/pie/pie.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/graphical/bar/bar.component.ts","./src/app/graphical/bar/bar.component.html","./src/app/graphical/line/line.component.ts","./src/app/graphical/line/line.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit,Input,SimpleChanges  } from '@angular/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n  @Input() public widgetData;\n  @Input() public values;\n  @Input() public nodeId;\n  public loaded: boolean;\n  series:any=[];\n  labels:any=[];\n\n  constructor() {this.loaded = false; }\n\n  ngOnInit(): void {\n  }\n\n  \n  public ngAfterViewInit(): void {\n    // this.chart = new ChartComponent();\n    this.loaded = true;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    let series=[];\n    let labels=[];\n    this.values.forEach(item => {\n      let arrSeries=[];\n      let label=new Set();\n      this.widgetData.seriesChart.forEach(el=>{\n        if(item[el.seriesKey]){\n          if(item[el.seriesKey]!=='dateTime'){\n            arrSeries.push(item[el.seriesKey].value);\n          }else{\n            arrSeries.push(item[el.seriesKey]);\n          }\n          label.add(el.seriesLabel);\n        }\n      })\n      series.push(arrSeries)\n      labels=[...label];\n    });\nthis.series=series;\nthis.labels=labels;\n  }\n\n}\n","<div class=\"scroller\">\n    <table class=\"table\">\n        <thead class=\"thead-dark\">\n          <tr >\n            <th scope=\"col\" *ngFor=\"let head of labels\">{{head}}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let row of series\">\n            <td *ngFor=\"let data of row\">{{data}}</td>\n          </tr>\n        </tbody>\n      </table>\n</div>\n","/* (ignored) */","import { Component, OnInit ,SimpleChanges,EventEmitter, Output,Input} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators,FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-widget',\n  templateUrl: './create-widget.component.html',\n  styleUrls: ['./create-widget.component.scss']\n})\nexport class CreateWidgetComponent implements OnInit {\n  @Input() public nodeId;\n  @Input() public hideNode;\n  @Output() createWidget = new EventEmitter<any>();\n\n\n  O5D100YOptions=[  {label:'distance',unit:'cm'}];\n  O5D100XOptions=[  {label:'switchState',unit:''},  {label:'dateTime',unit:''}];\n  VVB001YOptions=[{label:'fatigue',unit:'m/s'},\n  {label:'impact',unit:'m/s^2'},\n  {label:'friction',unit:'m/s^2'},\n  {label:'temperature',unit:'°C'},\n  {label:'crest',unit:''},\n  {label:'impact',unit:''}];\n  VVB001XOptions=[  {label:'status',unit:''},{label:'out1',unit:''},{label:'out2',unit:''},  {label:'dateTime',unit:''}];\nxAxisOption:any=[];\nyAxisOption:any=[];\n\nseriesKeyOption:any=[];\nseriesKeyO5D100=[{label:'distance',unit:'cm'}];\nseriesKeyVVB001=[{label:'fatigue',unit:'m/s'},\n{label:'impact',unit:'m/s^2'},\n{label:'friction',unit:'m/s^2'},\n{label:'temperature',unit:'°C'},\n{label:'crest',unit:''},\n{label:'impact',unit:''}];\n\n  widgetForm: FormGroup;\n\n\n  constructor(private fb: FormBuilder) {\n    this.widgetForm = this.fb.group({\n      widgetName: [''],\n      widgetType: [''],\n      chartTitle: [''],\n      xAxisLabel: [''],\n      xAxisKey: [''],\n      xAxisUnit: [''],\n      yAxisLabel: [''],\n      yAxisKey: [''],\n      yAxisUnit: [''],\n      seriesName:[''],\n      seriesChart: this.fb.array([])\n    });\n   }\n\n  ngOnInit(): void {\n\n  }\n\n   // Getter for easier access to FormArray\n   get seriesArray() {\n    return this.widgetForm.get('seriesChart') as FormArray;\n  }\n\n  // Method to add a new email FormControl\n  addRow() {\n    this.seriesArray.push(this.fb.group({\n      seriesKey:[''],\n      seriesLabel:['']\n    }));\n  }\n\n  // Method to remove an email FormControl\n  removeRow(index: number) {\n    this.seriesArray.removeAt(index);\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    this.seriesArray.clear();\n    if(this.nodeId=='ns=1;s=O5D100'){\n      this.xAxisOption=this.O5D100XOptions;\n      this.yAxisOption=this.O5D100YOptions;\n    }\n    if(this.nodeId=='ns=1;s=VVB001'){\n      this.xAxisOption=this.VVB001XOptions;\n      this.yAxisOption=this.VVB001YOptions;\n    }\n  }\n\n  chartTypeChange(){\n    this.seriesArray.clear();\n    if(this.nodeId=='ns=1;s=O5D100'){\n    if(this.widgetForm.get('widgetType').value=='TABLE'){\n      this.seriesKeyOption=[...this.O5D100XOptions,...this.O5D100YOptions];\n    }else{  this.seriesKeyOption=this.seriesKeyO5D100;}\n  }\n  if(this.nodeId=='ns=1;s=VVB001'){\n    if(this.widgetForm.get('widgetType').value=='TABLE'){\n      this.seriesKeyOption=[...this.VVB001XOptions,...this.VVB001YOptions];\n    }else{   this.seriesKeyOption=this.seriesKeyVVB001;}\n  }\n  }\n\n  changeXAxisKey(evt){\n    let val=evt.target.value;\n   let filtered= this.xAxisOption.filter(el=>el.label==val)[0];\n   this.widgetForm.get('xAxisUnit').setValue(filtered.unit);\n  }\n  changeYAxisKey(evt){\n    let val=evt.target.value;\n    let filtered= this.yAxisOption.filter(el=>el.label==val)[0];\n    this.widgetForm.get('yAxisUnit').setValue(filtered.unit);\n  }\n\n  create(){\n    if (this.widgetForm.valid) {\n    this.createWidget.emit(this.widgetForm.value);\n\n    this.widgetForm.patchValue({widgetName:'',widgetType:'',chartTitle:'',xAxisLabel:'',xAxisKey:'',xAxisUnit:'',yAxisLabel:'',yAxisKey:'',yAxisUnit:'',seriesName:''})\n    }else{\n\n    }\n  }\n\n}\n","<div class=\"add-widget-box\">\n\n    <form [formGroup]=\"widgetForm\" (ngSubmit)=\"create()\">\n \n      <div class=\"form-group\">\n        <label for=\"widgetName\" class=\"text-dark\">Enter Widget Name :</label>\n        <input type=\"text\" formControlName=\"widgetName\" class=\"form-control form-control-sm\" id=\"widgetName\" aria-describedby=\"emailHelp\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\"> </small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"widgetType\" class=\"text-dark\">Select Widget Type :</label>\n        <select class=\"form-control form-control-sm\" id=\"widgetType\" formControlName=\"widgetType\" (change)=\"chartTypeChange()\">\n          <option value=\"BAR\">Bar</option>\n          <option value=\"LINE\">Line</option>\n          <option value=\"PIE\">Pie</option>\n          <option value=\"TABLE\">Table</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"chartTitle\" class=\"text-dark\">Enter Chart Title :</label>\n        <input type=\"text\" class=\"form-control form-control-sm\" id=\"chartTitle\" formControlName=\"chartTitle\" aria-describedby=\"emailHelp\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\"> </small>\n      </div>\n      <div *ngIf=\"widgetForm.get('widgetType').value=='BAR' || widgetForm.get('widgetType').value=='LINE'\">\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4\">\n            <label for=\"xAxisKey\" class=\"text-dark\">Select X-Axis Key</label>\n            <select class=\"form-control form-control-sm\" id=\"xAxisKey\" formControlName=\"xAxisKey\" (change)=\"changeXAxisKey($event)\">\n              <option *ngFor=\"let option of xAxisOption\" [value]=\"option.label\">{{option.label}}</option>\n            </select>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"xAxisLabel\" class=\"text-dark\">X-Axis Label</label>\n            <input type=\"text\" class=\"form-control form-control-sm\" id=\"xAxisLabel\" formControlName=\"xAxisLabel\">\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"xAxisUnit\" class=\"text-dark\">Unit</label>\n            <input type=\"text\" class=\"form-control form-control-sm\" id=\"xAxisUnit\" formControlName=\"xAxisUnit\">\n          </div>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4\">\n            <label for=\"yAxisKey\" class=\"text-dark\">Select Y-Axis Key</label>\n            <select class=\"form-control form-control-sm\" id=\"yAxisKey\" formControlName=\"yAxisKey\" (change)=\"changeYAxisKey($event)\">\n              <option *ngFor=\"let option of yAxisOption\" [value]=\"option.label\">{{option.label}}</option>\n            </select>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"yAxisLabel\" class=\"text-dark\">Y-Axis Label</label>\n            <input type=\"text\" class=\"form-control form-control-sm\" id=\"yAxisLabel\" formControlName=\"yAxisLabel\">\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"yAxisUnit\" class=\"text-dark\">Unit</label>\n            <input type=\"email\" class=\"form-control form-control-sm\" id=\"yAxisUnit\" formControlName=\"yAxisUnit\">\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"seriesName\" class=\"text-dark\">Enter Series Name :</label>\n          <input type=\"text\" class=\"form-control form-control-sm\" id=\"seriesName\" aria-describedby=\"emailHelp\" formControlName=\"seriesName\">\n          <small id=\"emailHelp\" class=\"form-text text-muted\"> </small>\n        </div>\n      </div>\n    <ng-container *ngIf=\"widgetForm.get('widgetType').value=='PIE' || widgetForm.get('widgetType').value=='TABLE'\">\n   \n        <div formArrayName=\"seriesChart\">\n          <ng-container  *ngFor=\"let seriesControl of seriesArray.controls; let i = index\">\n            <form class=\"row\" [formGroup]=\"seriesControl\">\n              <div class=\"form-group col-md-6\">\n                <label for=\"seriesKey\" class=\"text-dark\">Select {{(widgetForm.get('widgetType').value=='TABLE')?'Data Key':'Series Key'}} </label>\n                <select class=\"form-control form-control-sm\" id=\"seriesKey\" formControlName=\"seriesKey\">\n                  <option *ngFor=\"let option of seriesKeyOption\" [value]=\"option.label\">{{option.label}}</option>\n                </select>\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label for=\"seriesLabel\" class=\"text-dark\">{{(widgetForm.get('widgetType').value=='TABLE')?'Column Label':'Series Label'}}</label>\n                <input type=\"text\" class=\"form-control form-control-sm\" id=\"seriesLabel\" formControlName=\"seriesLabel\">\n              </div>\n          <div class=\"form-group col-md-2\">\n            <label for=\"seriesLabel\" class=\"text-dark\">Action</label>\n            <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"removeRow(i)\"><i class=\"fa fa-trash\"></i></button>\n          </div></form>\n            \n   \n          </ng-container>\n        </div>\n        <button type=\"button\" class=\"btn btn-sm btn-secondary float-right\" (click)=\"addRow()\"><i class=\"fa fa-plus\"></i> Add a Row</button>\n        <br/>\n \n    </ng-container>\n    <br/>\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!hideNode\">Create </button>\n    </form>\n\n  </div>","import { Component, OnInit,ViewChild,Input,SimpleChanges } from '@angular/core';\nimport { ChartComponent } from \"ng-apexcharts\";\n\nimport {\n  ApexNonAxisChartSeries,\n  ApexResponsive,\n  ApexChart,ApexTitleSubtitle\n} from \"ng-apexcharts\";\n\nexport type ChartOptions = {\n  series: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  responsive: ApexResponsive[];\n  labels: any;\n  title:ApexTitleSubtitle\n};\n\n@Component({\n  selector: 'app-pie',\n  templateUrl: './pie.component.html',\n  styleUrls: ['./pie.component.scss']\n})\nexport class PieComponent implements OnInit {\n  @Input() public widgetData;\n  @Input() public values;\n  @Input() public nodeId;\n  @ViewChild(\"chart\") chart: ChartComponent;\n  public chartOptions: Partial<ChartOptions>;\n  public loaded: boolean;\n\n  constructor() {   this.loaded = false; }\n\n  ngOnInit(): void {\n    this.chartOptions = {\n      series: [],\n      chart: {\n        width: \"80%\",\n        type: \"pie\"\n      },   title: {\n        text:this.widgetData.chartTitle,\n        align: \"left\",\n        offsetX: 30,\n        offsetY: -1.5\n      },\n      labels: [],\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: \"bottom\"\n            }\n          }\n        }\n      ]\n    };\n  }\n\n  public ngAfterViewInit(): void {\n    // this.chart = new ChartComponent();\n    this.loaded = true;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    let series=[];\n    let labels=[];\n    this.values.forEach(item => {\n      this.widgetData.seriesChart.forEach(el=>{\n        if(item[el.seriesKey]){\n          labels.push(el.seriesLabel);\n          series.push( Math.round(item[el.seriesKey].value) );\n        }\n      })\n    });\n\n    this.chartOptions={...this.chartOptions,series:series,labels:labels}\n  }\n\n}\n","<apx-chart\n    [series]=\"chartOptions.series\"\n    [chart]=\"chartOptions.chart\"\n    [labels]=\"chartOptions.labels\"\n    [responsive]=\"chartOptions.responsive\"\n    [title]=\"chartOptions.title\"\n  ></apx-chart>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  socketIOUrl: 'http://localhost:3000',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { debounceTime } from 'rxjs/operators';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'frontend';\n  values: any[] = [];\n  nodeId: string;\n  connectForm: FormGroup;\n  readFromNodeForm:FormGroup;\n  serverUrl:string='';\n  isConnect:boolean=false;\n  retryConnect:boolean=false;\n  hideConn:boolean=false;\n  connectionLogs=[];\n  dataLogs=[];\n  hideNode:boolean=false;\nwidgets=[];\nlastValues:number=-1;\n  constructor(private socket: Socket,private fb: FormBuilder) {\n    this.connectForm = this.fb.group({\n      connectionStr: ['', Validators.required],\n    });\n    this.readFromNodeForm = this.fb.group({\n      nodeId: ['', Validators.required],\n    });\n  }\n\n  \n  \n  getMessage(): any {\n    return this.socket.fromEvent('values').pipe(debounceTime(500));\n  }\n\n  ngOnInit(): void {\n    this.getMessage().subscribe(\n      (data) => {\n        this.dataLogs.push({msg:JSON.stringify(data),time:new Date()});\n        this.values.push(data.decodedData);\n        this.dataLogs= this.dataLogs.slice(this.lastValues);\n        this.values= this.values.slice(this.lastValues);\n        // Handle data\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n\n    this.socket.fromEvent('connection-success').subscribe((data:any)=>{\n    this.serverUrl=data;\n    this.isConnect=false;\n    this.retryConnect=false;\n    this.connectionLogs.push({msg:\"connection is successful.\",time:new Date()});\n    this.hideConn=true;\n    })\n\n    this.socket.fromEvent('connection-retry').subscribe((data:any)=>{\n      this.retryConnect=true;\n      this.connectionLogs.push({msg:\"Trying to re-connect\",time:new Date()});\n      })\n\n      this.socket.fromEvent('connection-failed').subscribe((data:any)=>{\n        this.hideConn=false;\n      this.connectionLogs.push({msg:\"Failed to establish the connection, \"+data,time:new Date()});\n      })\n\n      this.socket.fromEvent('disconnected').subscribe((data:any)=>{\n        this.hideConn=false;\n        this.hideNode=false;\n      this.connectionLogs.push({msg:\"Disconnected\",time:new Date()});\n      })\n      this.socket.fromEvent('disconnect-error').subscribe((data:any)=>{\n        this.hideConn=false;\n      this.connectionLogs.push({msg:\"Error while disconnecting \"+data,time:new Date()});\n      })\n      this.socket.fromEvent('session-create-error').subscribe((data:any)=>{\n        this.hideNode=false;\n      this.connectionLogs.push({msg:\"Error while creating a session \"+data,time:new Date()});\n      })\n      this.socket.fromEvent('session-read-error').subscribe((data:any)=>{\n        this.hideNode=false;\n        this.dataLogs.push({msg:\"Error while Reading the data \"+data,time:new Date()});\n        })\n\n      this.socket.fromEvent('session-disconnect').subscribe((data:any)=>{\n        this.hideNode=false;\n      this.connectionLogs.push({msg:\"Session disconnected from the node\",time:new Date()});\n      })\n\n      this.socket.fromEvent('session-disconnect-error').subscribe((data:any)=>{\n      this.connectionLogs.push({msg:\"Error While disconnecting the current session\"+data,time:new Date()});\n      })\n\n      this.socket.fromEvent('session-created').subscribe((data:any)=>{\n        this.hideNode=true;\n        this.nodeId=data;\n      this.connectionLogs.push({msg:\"Session created for \"+data,time:new Date()});\n      })\n  \n\n            \n\n  }\n\n  connectToOpcua(){\n    if (this.connectForm.valid) {\n      this.isConnect=true;\n      this.connectionLogs.push({msg:\"Trying to establish an connection to opc ua server.\",time:new Date()});\n      // Form is valid, handle submission\n      console.log(this.connectForm.value);\n      this.socket.emit('connect-to-opcua',this.connectForm.value.connectionStr);\n    } else {\n      // Form is invalid, display error messages\n    }\n\n  }\n\n  readDataFromNode(){\n    if(this.readFromNodeForm.valid){\n      console.log(this.readFromNodeForm.value);\n      this.socket.emit('create-session-read-data',this.readFromNodeForm.value.nodeId);\n      this.connectionLogs.push({msg:\"Trying to create a session to read data from a node.\",time:new Date()});\n    }else{\n\n    }\n    \n  }\n\n  disconnectFromOpcua(){\n    this.connectForm.patchValue({connectionStr:''});\n    this.socket.emit('disconnect-from-opcua');\n    this.connectionLogs.push({msg:\"Trying to disconnect the existing connection to opc ua server.\",time:new Date()});\n    this.hideConn=false;\n  }\n\n  disconnectTheSession(){\n    this.readFromNodeForm.patchValue({nodeId:''});\n    this.socket.emit('disconnect-from-session');\n    this.connectionLogs.push({msg:\"Trying to disconnect the session of the existing node\",time:new Date()});\n  }\n\n  addWidget(evt){\n    this.widgets.push(evt);\n    console.log(evt);\n  }\n\n  deleteWidget(i){\n    this.widgets.splice(i,1);\n  }\n}\n","\n<header>\n  <nav class=\"navbar navbar-light header shadow-sm\">\n    <a class=\"navbar-brand font-weight-bold\">\n     OPC UA Client\n    </a>\n  </nav>\n</header>\n\n<section class=\"container-fluid\">\n<div class=\"row\">\n<div class=\"col-md-3\">\n<div class=\"connection shadow-sm\">\n  <h6 >Establish a Connection to the OPC UA server.</h6>\n  <ng-container *ngIf=\"!hideConn\">\n    <form [formGroup]=\"connectForm\" (ngSubmit)=\"connectToOpcua()\">\n      <div class=\"form-group\">\n        <label for=\"endpoint\" class=\"text-dark\">Enter the Endpoint :</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"connectionStr\" id=\"endpoint\" aria-describedby=\"emailHelp\">\n        <small id=\"emailHelp\" class=\"form-text text-muted text-wrap\">opc.tcp://&lt;host&gt;:&lt;port&gt;/Simulation</small>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Connect <i class=\"fa fa-handshake-o\" aria-hidden=\"true\"></i></button><br/>\n      <span class=\"badge badge-pill badge-info\" *ngIf=\"isConnect\"><i class=\"fa fa-cog fa-spin\" aria-hidden=\"true\"></i> Connecting ...</span>\n      <span class=\"badge badge-pill badge-danger text-wrap\" *ngIf=\"retryConnect\">Failed to Connect, retrying the connection...</span>\n    </form></ng-container>\n \n  <ng-container *ngIf=\"hideConn\">\n    <div class=\"form-group\">\n      <label class=\"text-dark\">Endpoint : {{serverUrl}}</label><br/>\n      <span class=\"badge badge-pill badge-success\">Connected <i class=\"fa fa-check\" aria-hidden=\"true\"></i> </span>\n    </div>\n   \n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"disconnectFromOpcua()\">Disconnect <i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>\n  </ng-container>\n\n</div>\n<div class=\"connection shadow-sm\">\n  <h6>Read data from a Node :</h6>\n  <ng-container *ngIf=\"!hideNode\">\n    <form [formGroup]=\"readFromNodeForm\" (ngSubmit)=\"readDataFromNode()\">\n      <div class=\"form-group\">\n        <label for=\"endpoint\" class=\"text-dark\">Enter the Node ID :</label>\n        <input type=\"text\" formControlName=\"nodeId\" class=\"form-control\" id=\"endpoint\" aria-describedby=\"emailHelp\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\">ns=1;s=O5D100 / ns=1;s=VVB001  </small>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Read </button>\n    </form></ng-container>\n  <ng-container *ngIf=\"hideNode\">\n    <div class=\"form-group\">\n      <label class=\"text-dark\">Node Id : {{nodeId}}</label><br/>\n     <h6><span class=\"badge badge-pill badge-success\">Reading the values. <i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\"></i> </span></h6> <br/>\n     <label class=\"text-dark\">Display : {{lastValues}} values</label>\n     <select class=\"form-control\" id=\"widgetType\" [(ngModel)]=\"lastValues\">\n      <option value=\"-1\">Latest</option>\n      <option value=\"-5\">Last 5 values</option>\n      <option value=\"-10\">Last 10 Values</option>\n      <option value=\"-15\">Last 15 Values</option>\n      <option value=\"-25\">Last 25</option>\n      <option value=\"-45\">Last 35</option>\n      <option value=\"-50\">Last 50</option>\n    </select>\n    </div>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"disconnectTheSession()\">Stop <i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>\n  </ng-container>\n\n\n</div>\n</div>\n<div class=\"col-md-9\">\n\n  <section class=\"logs shadow-sm\">\n    <accordion [isAnimated]=\"true\">\n      <accordion-group >\n        <button\n        class=\"btn btn-link btn-block justify-content-between d-flex w-100  shadow-none\"\n        accordion-heading type=\"button\">\n        <div class=\"pull-left float-left\">Connection Logs</div>\n        <span class=\"float-right pull-right\"><i class=\"fa fa-chevron-down\" aria-hidden=\"true\"></i></span>\n      </button>\n      <div class=\"logs-section\">\n        <p class=\"lin\" *ngFor=\"let log of connectionLogs\">{{log.time|date:'dd/MM/yyyy hh:mm:ss a'}} {{log.msg}}</p>\n      </div>\n      \n      </accordion-group>\n      <accordion-group >\n        <button\n        class=\"btn btn-link btn-block justify-content-between d-flex w-100  shadow-none\"\n        accordion-heading type=\"button\">\n        <div class=\"pull-left float-left\">Data Logs</div>\n        <span class=\"float-right pull-right\"><i class=\"fa fa-chevron-down\" aria-hidden=\"true\"></i></span>\n      </button>\n      <div class=\"logs-section\">\n        <p class=\"lin\" *ngFor=\"let log of dataLogs\">{{log.time|date:'dd/MM/yyyy hh:mm:ss a'}} {{log.msg}}</p>\n      </div>\n      </accordion-group>\n     \n    </accordion>\n  </section>\n\n  <section class=\"widget-creation shadow-sm\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <h6>Widget Creation</h6><br/>\n       <app-create-widget [nodeId]=\"nodeId\" (createWidget)=\"addWidget($event)\" [hideNode]=\"hideNode\"></app-create-widget>\n      </div>\n      <!-- <div class=\"col-md-6\"><h6>Preview</h6></div> -->\n    </div>\n  </section>\n  <section class=\"widget-display shadow-sm\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-6 mar\" *ngFor=\"let widget of widgets;let i=index\">\n          <div class=\"widget\">\n            <div class=\"toolbar\">\n              <div class=\"row justify-content-between\">\n                <div class=\"col-auto mr-auto\"><h6>{{widget.widgetName}}</h6></div>\n                <!-- <div class=\"col-auto mr-auto\"><h6>Select</h6></div> -->\n                <div class=\"col-auto\"> <i class=\"fa fa-close\" (click)=\"deleteWidget(i)\" style=\"cursor: pointer;\"></i></div>\n              </div>\n            </div>\n            <div class=\"graph\">\n               <app-line *ngIf=\"widget.widgetType=='LINE'\" [widgetData]=\"widget\" [values]=\"values\"></app-line>\n              <app-bar *ngIf=\"widget.widgetType=='BAR'\" [widgetData]=\"widget\" [values]=\"values\"></app-bar>\n              <app-pie *ngIf=\"widget.widgetType=='PIE'\" [widgetData]=\"widget\" [values]=\"values\"></app-pie>\n              <app-table *ngIf=\"widget.widgetType=='TABLE'\" [widgetData]=\"widget\" [values]=\"values\"></app-table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n\n  </section>\n \n</div>\n</div>\n\n</section>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { environment } from 'src/environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { NgApexchartsModule } from \"ng-apexcharts\";\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LineComponent } from './graphical/line/line.component';\nimport { BarComponent } from './graphical/bar/bar.component';\nimport { CreateWidgetComponent } from './create-widget/create-widget.component';\nimport { PieComponent } from './graphical/pie/pie.component';\nimport { TableComponent } from './graphical/table/table.component';\n\nconst config: SocketIoConfig = { url: environment.socketIOUrl, options: {} };\n@NgModule({\n  declarations: [AppComponent, LineComponent, BarComponent, CreateWidgetComponent, PieComponent, TableComponent],\n  imports: [BrowserModule, AppRoutingModule, SocketIoModule.forRoot(config), BrowserAnimationsModule, AccordionModule.forRoot(),NgApexchartsModule,ReactiveFormsModule,FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit,ViewChild, Input, SimpleChanges, } from '@angular/core';\nimport {\n  ApexAxisChartSeries,\n  ApexChart,\n  ChartComponent,\n  ApexDataLabels,\n  ApexXAxis,\n  ApexPlotOptions,\n  ApexYAxis,\n  ApexTitleSubtitle\n} from \"ng-apexcharts\";\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  xaxis: ApexXAxis;\n  yaxis:ApexYAxis;\n  title:ApexTitleSubtitle\n};\n\n@Component({\n  selector: 'app-bar',\n  templateUrl: './bar.component.html',\n  styleUrls: ['./bar.component.scss']\n})\nexport class BarComponent implements OnInit {\n  @Input() public widgetData;\n  @Input() public values;\n  @Input() public nodeId;\n  @ViewChild(\"chart\") chart: ChartComponent;\n  public chartOptions: Partial<ChartOptions>;\n  public loaded: boolean;\n\n  constructor() { \n    this.loaded = false;\n\n  }\n\n  ngOnInit(): void {\n    this.chartOptions = {\n      \n      chart: {\n        type: \"bar\",\n        height: 350\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      title: {\n        text: this.widgetData.chartTitle,\n        align: \"left\"\n      },\n      xaxis: {\n        categories: [\n          \"South Korea\",\n          \"Canada\",\n          \"United Kingdom\",\n          \"Netherlands\",\n          \"Italy\",\n          \"France\",\n          \"Japan\",\n          \"United States\",\n          \"China\",\n          \"Germany\"\n        ],title:{text:this.widgetData.xAxisLabel}\n      },  yaxis: {\n        title: {\n          text: this.widgetData.yAxisLabel\n        },\n      },\n      series: [\n        {\n          name: \"basic\",\n          data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380]\n        }\n      ],\n    };\n  }\n  public ngAfterViewInit(): void {\n    // this.chart = new ChartComponent();\n    this.loaded = true;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    let xAxisData=[];\n    let seriesData=[];\n    this.values.forEach(item => {\n      if(this.widgetData.xAxisKey!=='dateTime'){\n        xAxisData.push(item[this.widgetData.xAxisKey].value);\n      }else{\n        xAxisData.push(item[this.widgetData.xAxisKey]);\n      }\n   \n      seriesData.push(item[this.widgetData.yAxisKey].value);\n    });\n\n    this.chartOptions={...this.chartOptions,xaxis:{categories:xAxisData},series:[ {\n      name: this.widgetData.seriesName,\n      data: seriesData\n    }]}\n  }\n}\n","<apx-chart\n[series]=\"chartOptions.series\"\n[chart]=\"chartOptions.chart\"\n[dataLabels]=\"chartOptions.dataLabels\"\n[plotOptions]=\"chartOptions.plotOptions\"\n[xaxis]=\"chartOptions.xaxis\"\n[title]=\"chartOptions.title\"\n></apx-chart>\n","import { Component, OnInit,ViewChild, Input, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport {\n  ChartComponent,\n  ApexChart,\n  ApexAxisChartSeries,\n  ApexXAxis,\n  ApexDataLabels,\n  ApexTitleSubtitle,\n  ApexStroke,\n  ApexGrid,\n  ApexYAxis\n} from \"ng-apexcharts\";\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  dataLabels: ApexDataLabels;\n  grid: ApexGrid;\n  stroke: ApexStroke;\n  title: ApexTitleSubtitle;\n  yaxis:ApexYAxis\n};\n\n@Component({\n  selector: 'app-line',\n  templateUrl: './line.component.html',\n  styleUrls: ['./line.component.scss']\n})\nexport class LineComponent implements OnInit {\n  @Input() public widgetData;\n  @Input() public values;\n  @Input() public nodeId;\n  @ViewChild(\"chart\", { static: false }) chart: ChartComponent;\n  public chartOptions :Partial<ChartOptions>;\n  public loaded: boolean;\n\n  constructor() { \n    this.loaded = false;\n  }\n\n  ngOnInit(): void {\n    this.chartOptions = {\n     \n      chart: {\n        height: 350,\n        type: \"line\",\n        zoom: {\n          enabled: false\n        },  toolbar: {\n          show: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: \"smooth\"\n      },\n      title: {\n        text: this.widgetData.chartTitle,\n        align: \"left\"\n      },\n      grid: {\n        // row: {\n        //   colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n        //   opacity: 0.5\n        // }\n      },\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"Jul\",\n          \"Aug\",\n          \"Sep\"\n        ],title:{text:this.widgetData.xAxisLabel}\n      },\n      yaxis: {\n        title: {\n          text: this.widgetData.yAxisLabel\n        },\n      },\n      series: [\n        {\n          name: this.widgetData.seriesName,\n          data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n        }\n      ],\n    };\n   \n    console.log(this.chartOptions)\n  }\n \n  public ngAfterViewInit(): void {\n    // this.chart = new ChartComponent();\n    this.loaded = true;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    let xAxisData=[];\n    let seriesData=[];\n    this.values.forEach(item => {\n      if(this.widgetData.xAxisKey!=='dateTime'){\n        xAxisData.push(item[this.widgetData.xAxisKey].value);\n      }else{\n        xAxisData.push(item[this.widgetData.xAxisKey]);\n      }\n   \n      seriesData.push(item[this.widgetData.yAxisKey].value);\n    });\n\n    this.chartOptions={...this.chartOptions,xaxis:{categories:xAxisData},series:[ {\n      name: this.widgetData.seriesName,\n      data: seriesData\n    }]}\n  }\n}\n","<apx-chart\n[series]=\"chartOptions.series\"\n[chart]=\"chartOptions.chart\"\n[xaxis]=\"chartOptions.xaxis\"\n[dataLabels]=\"chartOptions.dataLabels\"\n[grid]=\"chartOptions.grid\"\n[stroke]=\"chartOptions.stroke\"\n[title]=\"chartOptions.title\"\n></apx-chart>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}